{"version":3,"sources":["webpack:///./src/pages/pensieve/index.js"],"names":["colors","theme","fontSizes","fonts","StyledPostInner","styled","Main","mixins","flexBetween","div","media","desktop","boxShadow","borderRadius","transition","lightNavy","green","h5","xxl","lightestSlate","lightSlate","span","SFMono","xs","ul","inlineLink","PensievePage","location","data","allMarkdownRemark","edges","rel","href","pageQuery"],"mappings":"qaASQA,EAA6BC,IAA7BD,OAAQE,EAAqBD,IAArBC,UAAWC,EAAUF,IAAVE,MAkCrBC,GAhCsBC,YAAOC,KAAV,gFAAGD,CAAH,0TAgBnBE,IAAOC,aAKMH,IAAOI,IAAV,uEAAGJ,CAAH,wIAQVK,IAAMC,QARI,MAWQN,IAAOI,IAAV,4EAAGJ,CAAH,wLACjBE,IAAOK,UACPL,IAAOC,YAMQP,IAAMY,aACTZ,IAAMa,WACAd,EAAOe,YAMVV,IAAOI,IAAV,uEAAGJ,CAAH,8FACAJ,IAAMa,WAKhBV,GAKmBC,IAAOI,IAAV,6EAAGJ,CAAH,4BAClBE,IAAOC,aAGUH,IAAOI,IAAV,yEAAGJ,CAAH,2CACPL,EAAOgB,OAMKX,IAAOY,GAAV,2EAAGZ,CAAH,6CAELH,EAAUgB,IACdlB,EAAOmB,eAEYd,IAAOI,IAAV,kFAAGJ,CAAH,8BAEhBL,EAAOoB,YAECf,IAAOgB,KAAV,uEAAGhB,CAAH,sEAECF,EAAMmB,OACRpB,EAAUqB,GACdvB,EAAOoB,YAECf,IAAOmB,GAAV,uEAAGnB,CAAH,8MASGF,EAAMmB,OACRpB,EAAUqB,GACdvB,EAAOgB,MAOZT,IAAOkB,YAuBAC,UAlBM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAqB,EAAXC,KACbC,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQH,SAAUA,GAChB,kBAAC,SAAD,KACE,+CACA,0BAAMI,IAAI,YAAYC,KAAK,qCAa5B,IAAMC,EAAS","file":"component---src-pages-pensieve-index-js-56b4f93d6e58a3759b5e.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport { Layout } from '@components';\nimport { IconZap } from '@components/icons';\nimport styled from 'styled-components';\nimport { theme, mixins, media, Main } from '@styles';\nconst { colors, fontSizes, fonts } = theme;\n\nconst StyledMainContainer = styled(Main)`\n  & > header {\n    text-align: center;\n    margin-bottom: 100px;\n\n    a {\n      &:hover,\n      &:focus {\n        cursor: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>âš¡</text></svg>\")\n            20 0,\n          auto;\n      }\n    }\n  }\n\n  footer {\n    ${mixins.flexBetween};\n    margin-top: 20px;\n    width: 100%;\n  }\n`;\nconst StyledGrid = styled.div`\n  margin-top: 50px;\n\n  .posts {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    grid-gap: 15px;\n    position: relative;\n    ${media.desktop`grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));`};\n  }\n`;\nconst StyledPostInner = styled.div`\n  ${mixins.boxShadow};\n  ${mixins.flexBetween};\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  padding: 2rem 1.75rem;\n  height: 100%;\n  border-radius: ${theme.borderRadius};\n  transition: ${theme.transition};\n  background-color: ${colors.lightNavy};\n  header,\n  a {\n    width: 100%;\n  }\n`;\nconst StyledPost = styled.div`\n  transition: ${theme.transition};\n  cursor: default;\n  &:hover,\n  &:focus {\n    outline: 0;\n    ${StyledPostInner} {\n      transform: translateY(-5px);\n    }\n  }\n`;\nconst StyledPostHeader = styled.div`\n  ${mixins.flexBetween};\n  margin-bottom: 30px;\n`;\nconst StyledFolder = styled.div`\n  color: ${colors.green};\n  svg {\n    width: 40px;\n    height: 40px;\n  }\n`;\nconst StyledPostName = styled.h5`\n  margin: 0 0 10px;\n  font-size: ${fontSizes.xxl};\n  color: ${colors.lightestSlate};\n`;\nconst StyledPostDescription = styled.div`\n  font-size: 17px;\n  color: ${colors.lightSlate};\n`;\nconst StyledDate = styled.span`\n  text-transform: uppercase;\n  font-family: ${fonts.SFMono};\n  font-size: ${fontSizes.xs};\n  color: ${colors.lightSlate};\n`;\nconst StyledTags = styled.ul`\n  display: flex;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n\n  li {\n    font-family: ${fonts.SFMono};\n    font-size: ${fontSizes.xs};\n    color: ${colors.green};\n    line-height: 1.75;\n    margin-right: 15px;\n    &:last-of-type {\n      margin-right: 0;\n    }\n    a {\n      ${mixins.inlineLink};\n    }\n  }\n`;\n\nconst PensievePage = ({ location, data }) => {\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location}>\n      <Helmet>\n        <title>Shivam Singh</title>\n        <link rel=\"canonical\" href=\"https://singhshivam.github.io\" />\n      </Helmet>\n    </Layout>\n  );\n};\n\nPensievePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default PensievePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/posts/\" }, frontmatter: { draft: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            description\n            slug\n            date\n            tags\n            draft\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}